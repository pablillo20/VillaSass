@charset "UTF-8";
@import url("https://fonts.googleapis.com/css?family=Nunito:300,400,700");
/* Paleta de colores */
/* Funcion que devuelve el color */
/* Tamaño de fuente */
/* Funcion que devuelve un tamaño */
/* Variables de media queries */
/* Función para obtener los breakpoints */
/**
 * Mixin para generar cabeceras (`h1` a `h6`) con diferentes tamaños y colores.
 * 
 * Este mixin se encarga de aplicar el tamaño de fuente y color según el nivel de la cabecera 
 * (`h1` a `h6`), utilizando un esquema de colores y tamaños predefinidos.
 *
 * @param {Number} $level - El nivel de la cabecera (1 a 6). 
 * @param {Color} $color - El color de la cabecera (puede ser uno de los valores definidos como 'primary', 'secondary', etc.).
 */
/**
 * Genera las cabeceras `h1` a `h6` con tamaños y colores específicos.
 * 
 * Utiliza el mixin `genera-cabeceras` para cada nivel de cabecera (`h1` a `h6`),
 * con tamaños de fuente y colores predefinidos para cada uno.
 */
h1 {
  font-size: 6rem;
  color: black;
  font-family: "Nunito", sans-serif;
}

h2 {
  font-size: 6rem;
  color: rgba(218, 165, 32, 0.5);
  font-family: "Nunito", sans-serif;
}

h3 {
  font-size: 2.5rem;
  color: white;
  font-family: "Nunito", sans-serif;
}

h4 {
  font-size: 2rem;
  color: rgb(237, 221, 221);
  font-family: "Nunito", sans-serif;
}

h5 {
  font-size: 1.8rem;
  color: rgb(111, 109, 34);
  font-family: "Nunito", sans-serif;
}

h6 {
  font-size: 1.6rem;
  color: black;
  font-family: "Nunito", sans-serif;
}

/**
 * Mixin para crear un contenedor flex.
 * 
 * Este mixin crea un contenedor con el modelo **Flexbox** para alinear y distribuir los elementos 
 * de acuerdo con las opciones proporcionadas (dirección, justificación y alineación).
 *
 * @param {String} $direction - La dirección del eje principal (por defecto es `row`). Puede ser `row` o `column`.
 * @param {String} $justify - Cómo justificar los elementos a lo largo del eje principal (por defecto es `center`).
 * @param {String} $align - Cómo alinear los elementos a lo largo del eje transversal (por defecto es `center`).
 */
/**
 * Mixin para aplicar estilos específicos para diferentes tamaños de pantalla (media queries).
 * 
 * Utiliza el mixin `media` para envolver contenido dentro de una consulta de medios que se activará 
 * cuando el tamaño de la pantalla sea menor o igual a un determinado breakpoint.
 *
 * @param {String} $size - El tamaño de la pantalla (puede ser uno de los valores definidos como 'small', 'medium', etc.).
 */
/**
 * Mixin para agregar estilos a los íconos de FontAwesome.
 * 
 * Este mixin aplica estilos personalizados a los íconos de FontAwesome, incluyendo el tamaño de la fuente 
 * y el color, permitiendo que sean fácilmente reutilizados en toda la aplicación.
 *
 * @param {Color} $color - El color de los íconos (por defecto es `quinta`).
 * @param {String} $font-size - El tamaño de la fuente de los íconos (por defecto es `1.5rem`).
 */
/**
 * Estilos globales aplicados a todos los elementos (`*`), pseudo-elementos `::after` y `::before`.
 * 
 * Estos estilos resetearán el margen y el padding predeterminado, establecerán una tipografía común
 * y activarán el modelo de caja **border-box** para todos los elementos.
 */
*, *::after, *::before {
  margin: 0;
  padding: 0;
  font-family: "Nunito", sans-serif;
  box-sizing: border-box;
}

/**
 * Estilos para el elemento `html`.
 * 
 * Se ajusta el tamaño de la fuente base al 62.5% para facilitar el cálculo de unidades rem.
 */
html {
  font-size: 62.5%;
}

/**
 * Estilos para el contenedor principal (`.container`).
 * 
 * Este contenedor utiliza el sistema de **grid** para organizar el contenido.
 */
.container {
  display: grid;
  grid-template-columns: minmax(6rem, 1fr) repeat(8, minmax(min-content, 16rem)) minmax(6rem, 1fr);
  grid-template-rows: repeat(4, min-content);
  grid-row-gap: 1.6rem;
  background-color: white;
}

/**
 * Estilos para el contenedor principal del encabezado (`.header`).
 * 
 * El encabezado se coloca en el grid general en la primera fila, ocupando todas las columnas.
 * El `header` se estructura como un grid con 9 columnas y 3 filas.
 * 
 * El diseño se adapta al contenido, utilizando `minmax()` para definir los límites de las columnas
 * y filas, asegurando una distribución flexible.
 */
.header {
  grid-column: 1/-1;
  grid-row: 1/2;
  /**
   * El encabezado utiliza un diseño **Grid** para organizar los elementos en columnas y filas.
   * Se definen 9 columnas con tamaños flexibles usando `minmax()` y 3 filas de tamaño mínimo.
   */
  display: grid;
  grid-template-columns: minmax(5rem, 1fr) repeat(7, minmax(min-content, 16rem)) minmax(10rem, 1fr);
  grid-template-rows: repeat(3, min-content);
  grid-row-gap: 2rem;
  z-index: 100;
  background-color: rgb(237, 221, 221);
  gap: 1rem;
  width: 100%;
}

/**
 * Estilos para el contenedor principal de la sección de inicio (`.home`).
 * 
 * Esta clase coloca la sección en el grid general y organiza su contenido utilizando **Grid Layout**.
 * 
 * La disposición se basa en tres columnas de tamaños flexibles, con un espacio entre columnas y filas definido.
 */
.home {
  grid-column: 1/-1;
  grid-row: 2/3;
  /**
   * El contenedor utiliza un diseño **Grid** con tres columnas y dos filas.
   * Las columnas tienen tamaños flexibles, mientras que las filas se ajustan automáticamente al contenido.
   */
  display: grid;
  grid-template-columns: 1fr minmax(10rem, 1fr) 1fr;
  grid-template-rows: repeat(2, auto);
  grid-column-gap: 2rem;
  grid-row-gap: 2rem;
}

/**
 * Estilos para el contenedor principal de la sección de información (`.info`).
 * 
 * La sección de información se ubica en el grid general, ocupando todo el ancho
 * disponible desde la columna 1 hasta la última. Se encuentra posicionada en la fila 4.
 */
.info {
  grid-column: 1/-1;
  grid-row: 4/5;
  /**
   * Estilos para el texto dentro de la sección de información (`.info-text`).
   * 
   * El texto está centrado usando **Flexbox**, con un tamaño de fuente grande,
   * un sutil efecto de sombra y bordes redondeados para el fondo.
   */
}
.info-text {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  font-size: 5rem;
  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
  border-radius: 10px;
  /**
   * Estilos adicionales para pantallas pequeñas.
   * 
   * En pantallas pequeñas, se reduce el tamaño de la fuente para adaptarse mejor al espacio.
   */
}
@media (max-width: 666px) {
  .info-text {
    font-size: 2rem;
  }
}

/**
 * Estilos para el contenedor principal de la sección de villas (`.villas`).
 * 
 * Esta clase se coloca en el grid general, ocupando todo el ancho disponible
 * desde la columna 1 hasta la última columna y posicionándose en la fila 5.
 */
.villas {
  grid-column: 1/-1;
  grid-row: 5/6;
  /**
   * Estilo utilizando **Flexbox** para el contenedor.
   * 
   * Se aplica Flexbox para organizar y alinear los elementos dentro de la sección de villas.
   */
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
}

/**
 * Estilos para el contenedor de la tarjeta (`.card`).
 *
 * La tarjeta ocupa una fila completa en el grid y se ubica en la fila 6 del diseño.
 * También tiene un margen superior dinámico, ajustándose en función del tamaño de la pantalla.
 */
.card {
  grid-column: 1/-1;
  grid-row: 6/7;
  margin-top: 2rem;
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  /**
   * Estilos para pantallas pequeñas.
   *
   * En pantallas pequeñas, el margen superior se reduce a 1rem para optimizar el espacio.
   */
  /**
   * Estilos para pantallas medianas.
   *
   * En pantallas medianas, el margen superior se ajusta a 1.5rem.
   */
  /**
   * Estilos para pantallas grandes.
   *
   * En pantallas grandes, el margen superior aumenta a 2.5rem para proporcionar más espacio.
   */
}
@media (max-width: 666px) {
  .card {
    margin-top: 1rem;
  }
}
@media (max-width: 768px) {
  .card {
    margin-top: 1.5rem;
  }
}
@media (max-width: 1024px) {
  .card {
    margin-top: 2.5rem;
  }
}

/**
 * Estilos para el pie de página (`footer`).
 * 
 * El pie de página ocupa toda la fila en el grid y se posiciona en la fila 8.
 * Utiliza un diseño **Flexbox** para centrar su contenido y proporciona un padding general.
 */
footer {
  grid-column: 1/-1;
  grid-row: 8/9;
  display: flex;
  align-items: flex-start;
  justify-content: center;
  padding: 3%;
  /**
   * Estilos para el contenedor de cada sección del pie de página (`.footer-div`).
   *
   * Cada sección tiene un borde superior y un ancho del 33.3% para dividir el espacio.
   * El texto se alinea al centro dentro de cada sección.
   */
  /**
   * Estilos para el título `h5` dentro del pie de página.
   *
   * El texto tiene un color secundario y un tamaño de fuente ajustado.
   * Se coloca un margen superior del 3%.
   */
  /**
   * Estilos para los párrafos (`p`) dentro del pie de página.
   *
   * Se aplica un margen pequeño para separar los párrafos.
   */
}
footer .footer-div {
  border-top: 2px solid;
  width: 33.3%;
  text-align: center;
  /**
   * Estilos para el contenedor de enlaces (`#footer-links`).
   *
   * Los enlaces se alinean en **Flexbox** de forma horizontal, centrados en la sección.
   */
}
footer .footer-div #footer-links {
  display: flex;
  align-items: flex-start;
  justify-content: center;
  width: 100%;
  /**
   * Estilos para los elementos `div` dentro de `#footer-links`.
   *
   * Cada `div` ocupa el 50% del ancho.
   */
  /**
   * Estilos para los íconos de Font Awesome (`fafaIcons`).
   *
   * Los íconos se configuran con color cuaternario y un tamaño de 2rem.
   */
}
footer .footer-div #footer-links div {
  width: 50%;
  border: none;
}
footer .footer-div #footer-links i {
  font-size: 2.5rem;
  margin-right: 1%;
  color: rgb(111, 109, 34);
}
footer h5 {
  margin-top: 3%;
  font-size: 1.2em;
  height: 20%;
}
footer p {
  margin: 0.2%;
}

/**
 * Estilos para pantallas pequeñas.
 * 
 * En pantallas pequeñas, el pie de página cambia su disposición de filas a columnas.
 * Las secciones dentro del pie de página tienen un 100% de ancho, y se ajustan los márgenes y el texto.
 */
@media (max-width: 666px) {
  footer {
    flex-direction: column;
    align-items: center;
  }
  footer .footer-div {
    width: 100%;
    border-bottom: none;
    padding: 2%;
  }
  footer h5 {
    width: 100%;
    text-align: center;
  }
}
/**
 * Estilos para el contenedor del logo (`.logo`).
 *
 * El logo se posiciona en la cuadrícula y se adapta al tamaño del contenedor.
 * Además, tiene un tamaño fijo de 12rem y se ajusta en función de los tamaños de pantalla.
 */
.logo {
  grid-column: 2/3;
  grid-row: 1/2;
  width: 12rem;
  height: 12rem;
  place-self: center;
  padding: 1rem;
  /**
   * Estilos para pantallas pequeñas (`small`).
   *
   * Cambia el diseño del logo para que ocupe la primera columna de la cuadrícula
   * y se coloque en el centro.
   */
  /**
   * Estilos para la imagen del logo (`.logo-img`).
   *
   * La imagen ocupa el 100% del ancho y la altura del contenedor del logo,
   * y mantiene la proporción correcta mediante `object-fit: cover`.
   */
  /**
   * Estilos para pantallas pequeñas (`small`).
   *
   * En pantallas pequeñas, el tamaño de la imagen del logo se reduce a 4rem de ancho y altura.
   */
}
@media (max-width: 666px) {
  .logo {
    grid-column: 1/2;
    display: flex;
    flex-wrap: wrap;
    align-content: center;
    justify-content: center;
  }
}
.logo-img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}
@media (max-width: 666px) {
  .logo-img {
    width: 4rem;
    height: 4rem;
  }
}

/**
 * Estilos para el encabezado principal (`.heading`).
 *
 * El encabezado se coloca en un grid específico y se centra utilizando Flexbox.
 * Se ajusta según el tamaño de pantalla.
 */
.heading {
  grid-column: 3/8;
  grid-row: 1/2;
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  place-self: center;
  /**
   * Estilos para el texto dentro del encabezado (`.heading-text`).
   *
   * El margen y tamaño de fuente se ajustan según el tamaño de pantalla.
   */
  /**
   * Estilos para pantallas medianas.
   *
   * El encabezado se ajusta a las columnas 2 a 9 y filas 1 a 2.
   * El texto también tiene un ajuste en el margen y tamaño de fuente.
   */
  /**
   * Estilos para pantallas grandes.
   *
   * El encabezado se mantiene en las columnas 3 a 8 y filas 1 a 2.
   * El texto también tiene un ajuste en el margen y tamaño de fuente.
   */
}
.heading-text {
  margin: 2rem;
  transition: color 0.3s ease-in-out, transform 0.3s ease-in-out;
  /**
   * Estilos para pantallas pequeñas.
   *
   * El margen se reduce a 1rem y el tamaño de fuente se ajusta a 3rem.
   */
}
.heading-text:hover {
  color: darkred;
  transform: scale(1.05);
}
@media (max-width: 666px) {
  .heading-text {
    margin: 1rem;
    font-size: 3rem;
  }
}
@media (max-width: 768px) {
  .heading {
    grid-column: 2/9;
    grid-row: 1/2;
  }
  .heading-text {
    margin: 1.5rem;
    font-size: 2.5rem;
  }
}
@media (max-width: 1024px) {
  .heading {
    grid-column: 3/8;
    grid-row: 1/2;
  }
  .heading-text {
    margin: 2.5rem;
    font-size: 3.5rem;
  }
}

/**
 * Estilos para el componente de navegación (`.nav`).
 *
 * El contenedor de la navegación se posiciona en la cuadrícula y ocupa un rango de columnas
 * y filas específicos. Además, se aplica un `z-index` para asegurar que se apile encima de otros elementos.
 */
.nav {
  grid-column: 2/9;
  grid-row: 2/3;
  z-index: 101;
  padding-bottom: 2rem;
  /**
   * Estilos para la lista de navegación (`.nav-list`).
   *
   * La lista se muestra sin estilo de lista predeterminado y se organiza con Flexbox,
   * permitiendo una distribución horizontal de los elementos.
   */
  /**
   * Estilos para pantallas pequeñas (`small`).
   *
   * En pantallas pequeñas, el contenedor de la navegación ocupa toda la anchura de la cuadrícula
   * y se ajustan los estilos para mejorar la usabilidad en dispositivos pequeños.
   */
  /**
   * Estilos para pantallas medianas (`medium`).
   *
   * En pantallas medianas, se ajustan los márgenes y el espaciado entre los elementos.
   */
  /**
   * Estilos para pantallas grandes (`large`).
   *
   * En pantallas grandes, el contenedor de la navegación vuelve a ocupar un rango específico de columnas
   * y se ajusta el espaciado y el margen para una mejor disposición.
   */
}
.nav-list {
  list-style-type: none;
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  gap: 2rem;
  padding: 0;
  margin: 0;
  /**
   * Estilos para los elementos de la lista de navegación (`.nav-item`).
   */
}
.nav-list .nav-item {
  /**
   * Estilos para el primer enlace de navegación (`a.first-nav-link`).
   *
   * Se aplican estilos específicos al enlace de la lista, como el color, el peso de la fuente,
   * y la transformación de texto. Además, se incluye un efecto hover para cambiar el color.
   */
}
.nav-list .nav-item a.first-nav-link {
  text-decoration: none;
  font-weight: bold;
  text-transform: uppercase;
  letter-spacing: 0.2rem;
  transition: color 0.3s ease-in-out, transform 0.3s ease-in-out;
  /**
   * Efecto hover sobre el enlace.
   *
   * Al pasar el cursor sobre el enlace, cambia su color a un tono de rojo más oscuro.
   */
}
.nav-list .nav-item a.first-nav-link:hover {
  color: darkred;
  transform: scale(1.1);
}
@media (max-width: 666px) {
  .nav {
    grid-column: 1/-1;
    padding-bottom: 1rem;
    justify-self: start;
    margin-right: 10rem;
  }
  .nav-list {
    gap: 0.1rem;
    max-width: 100%;
    flex-wrap: wrap;
  }
}
@media (max-width: 768px) {
  .nav {
    grid-column: 1/-1;
    padding-bottom: 1.5rem;
    margin-left: 2rem;
  }
  .nav-list {
    gap: 1.5rem;
  }
}
@media (max-width: 1024px) {
  .nav {
    grid-column: 2/10;
    padding-bottom: 2.5rem;
    margin-left: 4rem;
  }
  .nav-list {
    gap: 2.5rem;
  }
}

/**
 * Estilos para el contenedor principal `.content`.
 *
 * Este contenedor se posiciona dentro de un diseño basado en grid y utiliza
 * Flexbox para organizar su contenido. El comportamiento cambia según el tamaño de la pantalla.
 *
 * @mixin media(small) Aplica estilos para pantallas pequeñas.
 */
.content {
  grid-column: 2/3;
  grid-row: 1/2;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
  margin-left: 5rem;
  margin-top: 5rem;
  gap: 1rem;
  position: absolute;
  z-index: 1001;
  /**
   * Estilos para pantallas pequeñas.
   *
   * En pantallas pequeñas, el contenedor ocupa toda la columna del grid
   * y se reposiciona dentro del diseño.
   */
  /**
   * Estilo para el título dentro del contenedor.
   *
   * El título tiene un tamaño grande y en negrita.
   */
  /**
   * Estilo para la descripción dentro del contenedor.
   *
   * La descripción tiene un tamaño de texto moderado.
   */
  /**
   * Estilo para el botón.
   *
   * El botón tiene un tamaño grande, un color de fondo y efectos de transición.
   */
}
@media (max-width: 666px) {
  .content {
    grid-column: 1/-1;
    grid-row: 2/3;
    position: relative;
  }
}
.content .title {
  font-size: 3rem;
  font-weight: bold;
  color: black;
}
.content .description {
  font-size: 1.5rem;
  color: black;
}
.content .cta-button {
  padding: 1rem 2rem;
  background-color: black;
  border: none;
  color: white;
  font-size: 2rem;
  cursor: pointer;
  transition: background-color 0.3s, transform 0.3s;
  /**
   * Efecto al pasar el cursor sobre el botón (hover).
   *
   * Cuando el usuario pasa el mouse sobre el botón, el color de fondo cambia ligeramente.
   */
}
.content .cta-button:hover {
  background-color: black;
  transform: scale(1.05);
}

/**
 * Estilos para el contenedor de la imagen (`.image`).
 *
 * El contenedor ocupa todo el ancho y la altura del grid en la fila 1.
 * Se asegura de que la imagen ocupe todo el espacio disponible.
 */
.image {
  grid-column: 1/-1;
  grid-row: 1/2;
  width: 100%;
  height: 100%;
  /**
   * Estilos para la imagen dentro del contenedor (`img`).
   *
   * La imagen se ajusta al 100% del contenedor y mantiene una proporción de cobertura.
   */
}
.image img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

/**
 * Estilos para el componente del contenedor de información (`.info-contenedor`).
 *
 * Este contenedor utiliza Flexbox para organizar sus elementos de manera 
 * flexible. El contenido está centrado y se ajusta según el tamaño de pantalla.
 *
 */
.info-contenedor {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;
  gap: 15rem;
  padding: 2rem;
  /**
   * Estilos para el contenedor de cada tarjeta de información (`.info-contenedor-tarjeta`).
   *
   * Cada tarjeta está centrada y tiene un ancho máximo de 18rem.
   */
  /**
   * Estilos específicos para pantallas pequeñas.
   *
   * El contenedor cambia la dirección de los elementos a columna,
   * y el espaciado y tamaños de los elementos también se ajustan.
   */
  /**
   * Estilos específicos para pantallas medianas.
   *
   * El espaciado y el tamaño de las tarjetas se ajustan para pantallas de tamaño
   * mediano, mejorando la disposición visual.
   */
  /**
   * Estilos específicos para pantallas grandes.
   *
   * El espaciado y tamaño de las tarjetas se ajustan para pantallas grandes,
   * asegurando que el diseño siga siendo visualmente atractivo.
   */
}
.info-contenedor-tarjeta {
  text-align: center;
  max-width: 18rem;
  /**
   * Estilos para la imagen dentro de cada tarjeta.
   *
   * La imagen tiene un tamaño fijo y un margen inferior.
   */
  /**
   * Estilos para el título dentro de cada tarjeta (`h3`).
   *
   * El título tiene un tamaño de fuente grande, en negrita y en mayúsculas.
   */
  /**
   * Estilos para el párrafo dentro de cada tarjeta (`p`).
   *
   * El párrafo tiene un tamaño de fuente moderado y un buen interlineado.
   */
}
.info-contenedor-tarjeta img {
  width: 4rem;
  height: auto;
  margin-bottom: 0.8rem;
}
.info-contenedor-tarjeta h3 {
  font-size: 2.2rem;
  font-weight: bold;
  text-transform: uppercase;
  margin-bottom: 1rem;
  color: #b9975b;
}
.info-contenedor-tarjeta p {
  color: black;
  font-size: 1.5rem;
  line-height: 1.6;
}
@media (max-width: 666px) {
  .info-contenedor {
    flex-direction: column;
    gap: 2rem;
    padding: 1rem;
  }
  .info-contenedor-tarjeta {
    max-width: 100%;
    margin: 0 auto;
  }
  .info-contenedor-tarjeta img {
    width: 3rem;
  }
  .info-contenedor-tarjeta h3 {
    font-size: 1.8rem;
  }
  .info-contenedor-tarjeta p {
    font-size: 1.3rem;
  }
}
@media (max-width: 768px) {
  .info-contenedor {
    gap: 10rem;
    padding: 1.5rem;
  }
  .info-contenedor-tarjeta {
    max-width: 80%;
  }
  .info-contenedor-tarjeta img {
    width: 3.5rem;
  }
  .info-contenedor-tarjeta h3 {
    font-size: 2rem;
  }
  .info-contenedor-tarjeta p {
    font-size: 1.4rem;
  }
}
@media (max-width: 1024px) {
  .info-contenedor {
    gap: 5rem;
    padding: 3rem;
  }
  .info-contenedor-tarjeta {
    max-width: 60%;
  }
  .info-contenedor-tarjeta img {
    width: 4.5rem;
  }
  .info-contenedor-tarjeta h3 {
    font-size: 2.5rem;
  }
  .info-contenedor-tarjeta p {
    font-size: 1.6rem;
  }
}

/**
 * Estilos para el contenedor de las villas (`.villas-container`).
 *
 * El contenedor de las villas utiliza Flexbox para organizar los elementos de manera
 * flexible en filas. También permite que los elementos se ajusten y envuelvan
 * dentro del contenedor.
 */
.villas-container {
  display: flex;
  flex-wrap: wrap;
}

/**
 * Estilos para cada elemento de la villa (`.villa-item`).
 *
 * Cada villa es un elemento flexible que ocupa un porcentaje específico del ancho,
 * y su contenido se organiza en columna, con los elementos centrados tanto horizontal
 * como verticalmente.
 */
.villa-item {
  flex: 1 1 calc(20% - 20px);
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  overflow: hidden;
}

/**
 * Estilos para las imágenes dentro de cada villa (`.villa-item img`).
 *
 * La imagen ocupa todo el ancho del contenedor y ajusta su altura de manera automática.
 * Además, se aplica una transición para un efecto de transformación suave cuando se pasa el cursor.
 */
.villa-item img {
  width: 100%;
  height: auto;
  display: block;
  transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

/**
 * Efecto hover sobre las imágenes de las villas (`.villa-item img:hover`).
 *
 * Al pasar el cursor sobre la imagen, se aplica un efecto de escala, aumentando su tamaño
 * ligeramente para generar una interacción visual atractiva.
 */
.villa-item img:hover {
  transform: scale(1.1);
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
}

/**
 * Estilos para el texto de cada villa (`.villa-item p`).
 *
 * El texto es grande, en negrita y se encuentra en mayúsculas. Se aplica un color
 * dorado y un margen para separar el texto de la imagen.
 */
.villa-item p {
  font-size: 2.2rem;
  font-weight: bold;
  text-transform: uppercase;
  margin-bottom: 1rem;
  color: #b9975b;
  margin-top: 1rem;
  /**
   * Estilos para pantallas pequeñas.
   *
   * En pantallas pequeñas, el tamaño de la fuente se reduce para mejorar la legibilidad
   * y optimizar el espacio en pantalla.
   */
}
@media (max-width: 666px) {
  .villa-item p {
    font-size: 1.2rem;
  }
}

/**
 * Contenedor de las tarjetas.
 *
 * Este contenedor usa Flexbox para distribuir las tarjetas de manera flexible.
 * Las tarjetas se ajustan a diferentes tamaños de pantalla con un diseño responsive.
 *
 * @mixin flex() Aplica propiedades básicas de flexbox.
 * @mixin media(small) Aplica estilos para pantallas pequeñas.
 * @mixin media(medium) Aplica estilos para pantallas medianas.
 * @mixin media(large) Aplica estilos para pantallas grandes.
 */
.card-container {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;
  gap: 1.25rem;
  /**
   * Estilos para pantallas pequeñas.
   *
   * En pantallas pequeñas, el contenedor de las tarjetas cambia a una
   * disposición en columna y se reduce el espacio entre los elementos.
   */
  /**
   * Estilos para pantallas medianas.
   *
   * En pantallas medianas, el contenedor se organiza horizontalmente
   * y se ajusta el espacio entre los elementos.
   */
  /**
   * Estilos para pantallas grandes.
   *
   * En pantallas grandes, el contenedor mantiene una disposición horizontal
   * con un espacio más amplio entre las tarjetas.
   */
}
@media (max-width: 666px) {
  .card-container {
    flex-direction: column;
    gap: 1rem;
  }
}
@media (max-width: 768px) {
  .card-container {
    flex-direction: row;
    gap: 1.5rem;
  }
}
@media (max-width: 1024px) {
  .card-container {
    flex-direction: row;
    gap: 2rem;
  }
}

/**
 * Estilo para cada tarjeta dentro del contenedor.
 *
 * Define las dimensiones y el comportamiento visual de las tarjetas.
 * Las tarjetas tienen un comportamiento de rotación y transición cuando se
 * hace hover sobre ellas.
 */
.card-item {
  position: relative;
  width: 30rem;
  height: 38rem;
  overflow: hidden;
  background-color: black;
  border-radius: 0.9rem;
  transition: transform 0.3s, box-shadow 0.3s;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  /**
   * Estilos para pantallas pequeñas.
   *
   * En pantallas pequeñas, las tarjetas ocupan el 100% del ancho disponible
   * y tienen altura automática.
   */
  /**
   * Estilos para pantallas medianas.
   *
   * En pantallas medianas, las tarjetas tienen un tamaño más pequeño.
   */
  /**
   * Estilos para pantallas grandes.
   *
   * En pantallas grandes, las tarjetas mantienen su tamaño original.
   */
  /**
   * Estilo para la imagen dentro de la tarjeta.
   *
   * La imagen ocupa todo el espacio disponible, cubriendo el área de la tarjeta
   * con un efecto de transición de rotación.
   */
  /**
   * Estilo para el texto de la tarjeta.
   *
   * El texto está posicionado de manera absoluta en el centro de la tarjeta,
   * pero inicialmente está oculto y solo aparece cuando se hace hover sobre la tarjeta.
   */
  /**
   * Comportamiento al pasar el cursor (hover).
   *
   * Cuando el usuario hace hover sobre la tarjeta, la imagen rota y el texto
   * aparece con una transición suave.
   */
}
@media (max-width: 666px) {
  .card-item {
    width: 100%;
    height: auto;
  }
}
@media (max-width: 768px) {
  .card-item {
    width: 25rem;
    height: 30rem;
  }
}
@media (max-width: 1024px) {
  .card-item {
    width: 30rem;
    height: 38rem;
  }
}
.card-item img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: transform 0.5s ease-in-out;
  backface-visibility: hidden;
}
.card-item .card-text {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
  visibility: hidden;
  opacity: 0;
  transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;
}
.card-item .card-text h3,
.card-item .card-text p {
  font-size: 2rem;
  color: rgb(237, 221, 221);
  margin: 0;
  opacity: 1;
}
.card-item:hover {
  transform: scale(1.05);
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
}
.card-item:hover img {
  transform: rotateY(180deg);
}
.card-item:hover .card-text {
  visibility: visible;
  opacity: 1;
  z-index: 2;
}

/**
 * Estilos para el contenedor principal del pie de página (`.footer-wrapper`).
 *
 * Este contenedor utiliza **Flexbox** para organizar su contenido en columna,
 * garantizando que el pie de página siempre tenga al menos el 100% de la altura
 * de la ventana.
 */
.footer-wrapper {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  /**
   * Estilos para el contenedor del pie de página (`.footer-container`).
   *
   * El contenedor está diseñado para distribuir las secciones del pie de página
   * de manera flexible y alinearlas con espacio entre ellas.
   */
  /**
   * Estilo para la sección inferior del pie de página (`.footer-bottom`).
   *
   * Esta sección se centra y tiene un estilo más pequeño para la fuente.
   */
  /**
   * Estilos para pantallas pequeñas.
   *
   * Se añaden cambios de diseño si es necesario para pantallas pequeñas.
   */
  /**
   * Estilos para pantallas medianas.
   *
   * En pantallas medianas, el pie de página cambia la disposición de las secciones
   * y ajusta el tamaño de la fuente en la parte inferior.
   */
  /**
   * Estilos para pantallas grandes.
   *
   * En pantallas grandes, el pie de página vuelve a la disposición en fila.
   * Además, se ajusta el tamaño de la fuente en la parte inferior.
   */
}
.footer-wrapper .footer-container {
  display: flex;
  justify-content: space-between;
  width: 100%;
  max-width: 1200px;
  margin-bottom: 2rem;
  flex-wrap: wrap;
  flex-grow: 1;
  /**
   * Estilos para cada sección dentro del pie de página (`.footer-section`).
   *
   * Cada sección ocupa un espacio flexible y tiene un tamaño mínimo
   * para garantizar que no se colapsen.
   */
}
.footer-wrapper .footer-container .footer-section {
  flex: 1;
  min-width: 200px;
  margin-right: 1.5rem;
  margin-bottom: 1.5rem;
  color: #fff;
  /**
   * Estilo para el título de cada sección (`h3`).
   *
   * El título es de tamaño medio y en negrita.
   */
  /**
   * Estilo para los párrafos dentro de cada sección (`p`).
   *
   * El tamaño de fuente es más pequeño para los párrafos.
   */
  /**
   * Estilo para la lista de redes sociales (`ul.social-list`).
   *
   * La lista es horizontal, sin puntos de lista, y contiene iconos de redes sociales.
   */
}
.footer-wrapper .footer-container .footer-section h3 {
  font-size: 1.2rem;
  margin-bottom: 1rem;
  font-weight: bold;
}
.footer-wrapper .footer-container .footer-section p {
  font-size: 0.9rem;
}
.footer-wrapper .footer-container .footer-section ul.social-list {
  list-style: none;
  padding: 0;
  display: flex;
  /**
   * Estilos para cada ítem de la lista de redes sociales (`li`).
   *
   * Se establece un margen derecho entre los iconos.
   */
}
.footer-wrapper .footer-container .footer-section ul.social-list li {
  margin-right: 10px;
  /**
   * Estilos para los enlaces dentro de la lista (`a`).
   *
   * Cada enlace es un bloque en línea para el control del espacio.
   */
}
.footer-wrapper .footer-container .footer-section ul.social-list li a {
  display: inline-block;
  /**
   * Estilos para las imágenes dentro de los enlaces (`img`).
   *
   * Las imágenes tienen un tamaño fijo y un efecto de transición
   * para aumentar ligeramente el tamaño cuando el usuario pasa el cursor.
   */
}
.footer-wrapper .footer-container .footer-section ul.social-list li a img {
  width: 24px;
  height: 24px;
  transition: transform 0.3s, box-shadow 0.3s;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  /**
   * Efecto hover: la imagen aumenta ligeramente de tamaño.
   */
}
.footer-wrapper .footer-container .footer-section ul.social-list li a img:hover {
  transform: scale(1.1);
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
}
.footer-wrapper .footer-bottom {
  text-align: center;
  font-size: 0.85rem;
  color: #aaa;
  padding-top: 1rem;
  border-top: 1px solid #444;
}
@media (max-width: 768px) {
  .footer-wrapper .footer-container {
    flex-direction: column;
    align-items: center;
  }
  .footer-wrapper .footer-container .footer-section {
    margin-right: 0;
    margin-bottom: 1rem;
  }
  .footer-wrapper .footer-bottom {
    font-size: 0.9rem;
  }
}
@media (max-width: 1024px) {
  .footer-wrapper .footer-container {
    flex-direction: row;
    justify-content: space-between;
  }
  .footer-wrapper .footer-container .footer-section {
    margin-right: 1.5rem;
    margin-bottom: 1.5rem;
  }
  .footer-wrapper .footer-bottom {
    font-size: 1rem;
  }
}

/*# sourceMappingURL=style.css.map */
